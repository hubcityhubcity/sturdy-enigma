name: PR testing

on:
  pull_request:
    branches:
      - "*"

defaults:
  run:
    shell: bash

jobs:
  check_changelog:
    name: checkChangelog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v1
      # What you should use
      - name: Add simsala
        run: npm install simsala
      - name: Check if changlog was updated
        run: node node_modules/simsala/src/cli.js check --pending-path ./changes

  test_pr:
    name: testPR
    runs-on: ubuntu-latest
    steps:
      - name: 1 - Prep
        uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
      - name: 2 - Lint
        continue-on-error: true
        run: yarn lint
      - name: 3 - Unit tests
        continue-on-error: true
        run: |
          yarn run test:unit --coverage --maxWorkers=2
          bash <(curl -s https://codecov.io/bash)
        # no_output_timeout: 180
      - name: 4 - Audit
        run: |
          set +e
          yarn audit
          SUMMARY="$(yarn audit | grep Severity)"
          VULNERABILITIES=".*(High|Critical).*"
          if [[ $SUMMARY =~ $VULNERABILITIES ]]; then
            echo "Unsafe dependencies found: $SUMMARY" >&2
            exit 1
          fi
          echo "Your dependencies are secure enough: $SUMMARY"
          exit 0

  test_e2e:
    name: testE2E
    runs-on: ubuntu-latest
    container:
      image: circleci/node:10.15.3-browsers
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v1
      - name: Install dependencies
        run: sudo yarn install
      - name: Run testE2E
        env:
          SENTRY_URL: ""
          SENTRY_TOKEN: ""
          BROWSERSTACK_USERNAME: ${{ secrets.BrowserstackUsername }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BrowserstackAccessKey }}
        run: |
          PR_NUMBER="$(echo $CIRCLE_PULL_REQUEST | cut -d'/' -f 7)"
          FE_URL=https://deploy-preview-${PR_NUMBER}--lunieio.netlify.com

          attempt_counter=0
          max_attempts=10

          until $(curl --output /dev/null --silent --head --fail ${FE_URL}); do
              if [ ${attempt_counter} -eq ${max_attempts} ];then
                echo "Max attempts reached"
                exit 1
              fi

              printf '.'
              attempt_counter=$(($attempt_counter+1))
              sleep 30
          done

          PASSWORD=${NETWORK_PASSWORD} CHT_PWD=${ACCOUNT_PASSWORD} yarn test:e2e:browserstack --fe=${FE_URL} --api=https://production-api.lunie.io
